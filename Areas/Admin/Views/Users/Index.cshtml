@model IEnumerable<EasyGames.Models.User>
@{
    ViewData["Title"] = "Admin · Users";
    Layout = "/Views/Shared/_Layout.cshtml";
}

<section class="container py-5">
    <!-- Header section with gradient glass background -->
    <div class="p-4 p-md-5 rounded-4 shadow-sm mb-4"
         style="backdrop-filter:saturate(140%) blur(10px);
                background:linear-gradient(135deg, rgba(129,79,247,.10), rgba(203,157,255,.12));">

        <!-- Header row: title + action buttons -->
        <div class="d-flex justify-content-between align-items-center flex-wrap gap-2">
            <h1 class="mb-0">Users</h1>
            <div class="d-flex gap-2 flex-wrap">
                <!-- Export CSV button (optional reporting polish) -->
                <a asp-area="Admin" asp-controller="Users" asp-action="ExportToCsv"
                   class="btn btn-success">
                    Export CSV
                </a>

                <!-- New User button -->
                <a asp-area="Admin" asp-controller="Users" asp-action="Create" class="btn btn-primary">
                    + New User
                </a>

                <!-- Back to Dashboard -->
                <a asp-area="Admin" asp-controller="Dashboard" asp-action="Index" class="btn btn-outline-secondary">
                    ← Back
                </a>
            </div>
        </div>

        <div class="mt-2 text-muted">Manage registered user accounts in the system.</div>

        <!-- TempData messages -->
        @if (TempData["Msg"] is string m)
        {
            <div id="msgAlert" class="alert alert-success mt-3 mb-0">@m</div>
        }
        @if (TempData["Err"] is string e)
        {
            <div id="msgAlert" class="alert alert-danger mt-3 mb-0">@e</div>
        }
    </div>

    <!-- Search bar card -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form method="get" class="d-flex gap-2 flex-wrap">
                <input type="text" name="search" value="@Context.Request.Query["search"]"
                       class="form-control flex-grow-1" placeholder="Search by name or email..." />
                <button type="submit" class="btn btn-outline-primary">Search</button>
            </form>
        </div>
    </div>

    <!-- Users table -->
    <div class="card shadow-sm">
        <div class="table-responsive">
            <table class="table align-middle table-hover mb-0">
                <thead class="table-light">
                    <tr>
                        <th style="width:80px;">Id</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>Address</th>
                        <th style="width:260px;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var u in Model)
                    {
                        <tr>
                            <td class="text-muted">@u.Id</td>
                            <td>@(string.IsNullOrWhiteSpace(u.Name) ? "-" : u.Name)</td>
                            <td>@u.Email</td>
                            <td>
                                <span class="badge @(u.Role.ToString() == "Owner" ? "bg-primary" : "bg-secondary")">
                                    @u.Role
                                </span>
                            </td>
                            <td>@(string.IsNullOrWhiteSpace(u.Address) ? "-" : u.Address)</td>
                            <td>
                                <div class="d-flex gap-2 flex-wrap">
                                    <a asp-area="Admin" asp-controller="Users" asp-action="Edit" asp-route-id="@u.Id"
                                       class="btn btn-sm btn-outline-primary d-flex align-items-center gap-1">
                                        <i class="bi bi-pencil-square"></i> Edit
                                    </a>

                                    <form asp-area="Admin" asp-controller="Users" asp-action="ToggleRole" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@u.Id" />
                                        <button type="submit" class="btn btn-sm btn-outline-warning d-flex align-items-center gap-1">
                                            <i class="bi bi-arrow-repeat"></i> @(u.Role.ToString() == "Owner" ? "Demote" : "Promote")
                                        </button>
                                    </form>

                                    <form asp-area="Admin" asp-controller="Users" asp-action="Delete" method="post" class="d-inline"
                                          onsubmit="return confirm('Delete this user?');">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@u.Id" />
                                        <button type="submit" class="btn btn-sm btn-outline-danger d-flex align-items-center gap-1">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>

<!-- Optional styles for sticky header -->
<style>
    thead th {
        position: sticky;
        top: 0;
        background-color: #f8f9fa;
        z-index: 1;
    }
</style>

@section Scripts {
    <script>
        // Auto-hide success/error alerts after 4 seconds
        setTimeout(() => {
            const alert = document.getElementById('msgAlert');
            if (alert) alert.style.display = 'none';
        }, 4000);
    </script>
}


